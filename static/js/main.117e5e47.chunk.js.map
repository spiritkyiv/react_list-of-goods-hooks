{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","isClicked","sortedGoods","goods","visibleGoods","ALPABET","sort","a","b","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA4BE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,KAAeL,IAAeG,GAE9BG,EAvBD,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAENQ,EAAY,YAAOD,GAUzB,OARIJ,IAAaP,EAASa,SACxBD,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAG1CT,IAAaP,EAASkB,QACxBN,EAAaE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGpCf,EAAaQ,EAAaQ,UAAYR,EASzBS,CAAkBpB,EAAiB,CACrDM,WACAH,eAGF,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IAAW,iBACT,CAAE,WAAYjB,IAAaP,EAASa,UAExCY,QAAS,kBAAMjB,EAAYR,EAASa,UANtC,iCAWA,wBACEU,KAAK,SACLD,UACEE,IAAW,oBACT,CAAE,WAAYjB,IAAaP,EAASkB,SAExCO,QAAS,kBAAMjB,EAAYR,EAASkB,SANtC,4BAWA,wBACEK,KAAK,SACLD,UACEE,IAAW,mBACT,CAAE,YAAapB,IAEnBqB,QAAS,kBAAMpB,GAAYD,IAN7B,qBAWCK,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPpB,GAAW,GACXG,EAAYR,EAASM,OALzB,sBAcJ,6BACE,6BACGI,EAAYgB,KAAI,SAACC,GAAD,OACf,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,cC5GpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.117e5e47.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  }\n\n  return isReversed ? visibleGoods.reverse() : visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const isClicked = !(!isReversed && !sortType);\n\n  const sortedGoods = getReorderedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-info',\n              { 'is-light': sortType !== SortType.ALPABET })\n          }\n          onClick={() => setSortType(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-success',\n              { 'is-light': sortType !== SortType.LENGTH })\n          }\n          onClick={() => setSortType(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            classNames('button is-danger',\n              { 'is-light': !isReversed })\n          }\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {isClicked && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setReverse(false);\n              setSortType(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {sortedGoods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}